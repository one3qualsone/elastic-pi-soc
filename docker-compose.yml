volumes:
  esdata01:
    driver: local
  kibanadata:
    driver: local

networks:
  elastic:
    driver: bridge

services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    container_name: es01
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - "${ES_PORT}:9200"
    environment:
      - node.name=es01
      - cluster.name=${CLUSTER_NAME}
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - xpack.security.authc.api_key.enabled=true
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - "ES_JAVA_OPTS=-Xms1536m -Xmx1536m"
    mem_limit: ${ES_MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - elastic
    healthcheck:
      test: ["CMD-SHELL", "curl -u elastic:${ELASTIC_PASSWORD} -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s

  kibana:
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    container_name: kibana
    volumes:
      - kibanadata:/usr/share/kibana/data
    ports:
      - "${KIBANA_PORT}:5601"
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=http://es01:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
      - SERVER_HOST=0.0.0.0
      - SERVER_PUBLICBASEURL=http://192.168.178.100:${KIBANA_PORT}
      - xpack.fleet.agents.elasticsearch.hosts=["http://es01:9200"]
      - xpack.encryptedSavedObjects.encryptionKey=${ENCRYPTION_KEY}
      - xpack.security.encryptionKey=${ENCRYPTION_KEY}
      - xpack.reporting.encryptionKey=${ENCRYPTION_KEY}
    mem_limit: ${KB_MEM_LIMIT}
    depends_on:
      es01:
        condition: service_healthy
    networks:
      - elastic
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s

  fleet-server:
    image: docker.elastic.co/elastic-agent/elastic-agent:${STACK_VERSION}
    container_name: fleet-server
    ports:
      - "${FLEET_PORT}:8220"
    environment:
      - FLEET_SERVER_ENABLE=1
      - FLEET_SERVER_ELASTICSEARCH_HOST=http://es01:9200
      - FLEET_SERVER_ELASTICSEARCH_USERNAME=elastic
      - FLEET_SERVER_ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
      - FLEET_SERVER_HOST=0.0.0.0
      - FLEET_SERVER_PORT=8220
      - FLEET_URL=http://192.168.178.100:${FLEET_PORT}
      - KIBANA_FLEET_SETUP=1
      - KIBANA_FLEET_HOST=http://kibana:5601
      - KIBANA_FLEET_USERNAME=elastic
      - KIBANA_FLEET_PASSWORD=${ELASTIC_PASSWORD}
      - FLEET_SERVER_INSECURE=1
      - FLEET_INSECURE=1
    mem_limit: 1g
    depends_on:
      kibana:
        condition: service_healthy
    networks:
      - elastic
    restart: unless-stopped